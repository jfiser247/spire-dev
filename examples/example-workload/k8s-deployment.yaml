apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-workload
  namespace: workload
  labels:
    app: example-workload
    service: demonstration
    tier: application
spec:
  replicas: 2
  selector:
    matchLabels:
      app: example-workload
  template:
    metadata:
      labels:
        app: example-workload
        service: demonstration
        tier: application
        version: v1.0.0
      annotations:
        # Optional: For CRD-free deployments
        spire.io/spiffe-id: "spiffe://example.org/workload/example-workload"
        spire.io/parent-id: "spiffe://example.org/spire/agent/k8s_psat/spire-server-cluster"
        spire.io/selector: "k8s:pod-label:app:example-workload"
    spec:
      serviceAccountName: example-workload
      containers:
      - name: example-workload
        image: example-workload:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        env:
        - name: SPIFFE_ENDPOINT_SOCKET
          value: "unix:///run/spire/sockets/agent.sock"
        - name: SERVICE_NAME
          value: "example-workload"
        - name: PORT
          value: "8080"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-workload
  namespace: workload
  labels:
    app: example-workload
---
apiVersion: v1
kind: Service
metadata:
  name: example-workload
  namespace: workload
  labels:
    app: example-workload
spec:
  selector:
    app: example-workload
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  type: ClusterIP
---
# Optional: Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-workload
  namespace: workload
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  rules:
  - host: example-workload.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: example-workload
            port:
              number: 80