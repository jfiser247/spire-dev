apiVersion: v1
kind: ConfigMap
metadata:
  name: register-basic-workload
  namespace: spire-server
  labels:
    app: spire-registration
    workload: basic-workload
data:
  register.sh: |
    #!/bin/bash
    set -e
    
    echo "=== SPIRE Basic Workload Registration ==="
    echo "Registering: Basic HTTP Service"
    echo "SPIFFE ID: spiffe://example.org/workload/basic-http-service"
    echo "Timestamp: $(date)"
    echo ""
    
    # Wait for SPIRE server to be ready
    echo "Waiting for SPIRE server to be ready..."
    sleep 10
    
    # Check if SPIRE server is responding
    if ! /opt/spire/bin/spire-server agent list &>/dev/null; then
        echo "SPIRE server is not ready. Waiting..."
        sleep 30
    fi
    
    # Create registration entry for basic HTTP service
    echo "Creating registration entry for basic-http-service..."
    /opt/spire/bin/spire-server entry create \
      -spiffeID spiffe://example.org/workload/basic-http-service \
      -parentID spiffe://example.org/spire/agent/k8s_psat/spire-server-cluster \
      -selector k8s:ns:workload \
      -selector k8s:sa:basic-http-service \
      -selector k8s:pod-label:app:basic-http-service \
      -selector k8s:pod-label:service:web-api \
      -dnsName basic-http-service.workload.svc.cluster.local \
      -ttl 1800
    
    echo ""
    echo "Registration completed successfully!"
    echo ""
    
    # Verify the entry was created
    echo "Verifying registration entry:"
    /opt/spire/bin/spire-server entry show -spiffeID spiffe://example.org/workload/basic-http-service
    
    echo ""
    echo "=== Registration Summary ==="
    echo "✓ SPIFFE ID: spiffe://example.org/workload/basic-http-service"
    echo "✓ Namespace: workload"
    echo "✓ ServiceAccount: basic-http-service"
    echo "✓ DNS Name: basic-http-service.workload.svc.cluster.local"
    echo "✓ TTL: 1800 seconds (30 minutes)"
    echo ""
    echo "Next steps:"
    echo "1. Deploy workload to 'workload' namespace"
    echo "2. Use ServiceAccount 'basic-http-service'"
    echo "3. Add pod label: app=basic-http-service"
    echo "4. Add pod label: service=web-api"
    echo "5. Mount SPIRE agent socket in workload"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: register-basic-workload
  namespace: spire-server
  labels:
    app: spire-registration
    workload: basic-workload
spec:
  template:
    metadata:
      labels:
        app: spire-registration
        workload: basic-workload
    spec:
      serviceAccountName: spire-server
      restartPolicy: Never
      containers:
      - name: registrar
        image: ghcr.io/spiffe/spire-server:1.12.4
        command: ["/bin/sh"]
        args: ["/config/register.sh"]
        volumeMounts:
        - name: spire-config-volume
          mountPath: /run/spire/config
          readOnly: true
        - name: spire-data-volume
          mountPath: /run/spire/data
        - name: registration-script
          mountPath: /config
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: spire-config-volume
        configMap:
          name: spire-server
      - name: spire-data-volume
        persistentVolumeClaim:
          claimName: spire-server-data
      - name: registration-script
        configMap:
          name: register-basic-workload
          defaultMode: 0755
  backoffLimit: 3