---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spire.fullname" . }}-server-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "spire.server.labels" . | nindent 4 }}
data:
  server.conf: |
    server {
      bind_address = "{{ .Values.spireServer.config.bindAddress }}"
      bind_port = "{{ .Values.spireServer.config.bindPort }}"
      socket_path = "{{ .Values.spireServer.config.socketPath }}"
      trust_domain = "{{ include "spire.trustDomain" . }}"
      data_dir = "{{ .Values.spireServer.config.dataDir }}"
      log_level = "{{ .Values.spireServer.config.logLevel }}"
      log_file = "{{ .Values.spireServer.config.logFile }}"
    }

    plugins {
      DataStore "sql" {
        plugin_data {
          database_type = "postgres"
          connection_string = "{{ include "spire.postgresql.connectionString" . }}"
        }
      }

      KeyManager "disk" {
        plugin_data {
          keys_path = "{{ .Values.spireServer.config.dataDir }}/keys.json"
        }
      }

      NodeAttestor "k8s_psat" {
        plugin_data {
          clusters = {
            "{{ .Values.global.clusterName }}" = {
              service_account_allow_list = [
                "{{ .Release.Namespace }}:{{ include "spire.agent.serviceAccountName" . }}"
              ]
            }
          }
        }
      }
    }

    health_checks {
      listener_enabled = {{ .Values.spireServer.config.healthChecks.listenerEnabled }}
      bind_address = "{{ .Values.spireServer.config.healthChecks.bindAddress }}"
      bind_port = "{{ .Values.spireServer.config.healthChecks.bindPort }}"
      live_path = "{{ .Values.spireServer.config.healthChecks.livePath }}"
      ready_path = "{{ .Values.spireServer.config.healthChecks.readyPath }}"
    }

    {{- if .Values.spireServer.config.telemetry.enabled }}
    telemetry {
      Prometheus {
        plugin_data {
          host = "0.0.0.0"
          port = {{ .Values.spireServer.config.telemetry.prometheusPort }}
        }
      }
    }
    {{- end }}