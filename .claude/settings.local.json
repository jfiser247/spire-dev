{
  "permissions": {
    "allow": [
      "Bash(time:*)",
      "Bash(__NEW_LINE__ echo \"\")",
      "Bash(__NEW_LINE__ echo \"üè¢ SPIRE Server cluster (spire-server namespace):\")",
      "Bash(__NEW_LINE__ kubectl --context spire-server-cluster -n spire-server get pods)",
      "Bash(__NEW_LINE__ echo \"üîß Workload cluster namespaces:\")",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster get namespaces)",
      "Bash(__NEW_LINE__ echo \"üìã Checking if clusters are running:\")",
      "Bash(__NEW_LINE__ minikube profile list)",
      "Bash(__NEW_LINE__ kubectl apply -f k8s/workload-cluster/payment-api-deployment.yaml)",
      "Bash(__NEW_LINE__ echo \"üìä Checking namespace status:\")",
      "Bash(__NEW_LINE__ echo \"üè¢ SPIRE Server namespace:\")",
      "Bash(__NEW_LINE__ echo \"üîß SPIRE System namespace:\")",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n spire-system get pods)",
      "Bash(__NEW_LINE__ echo \"üíº Production namespace:\")",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n production get pods)",
      "Bash(__NEW_LINE__ sleep 30)",
      "Bash(__NEW_LINE__ echo \"üìä Updated pod status:\")",
      "Bash(__NEW_LINE__ echo \"=======================================\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ Clusters: Running\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ Namespaces: Created with SPIFFE best practices\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ Resources: Deployed (some pods still starting)\")",
      "Bash(__NEW_LINE__ echo \"‚úÖ Dashboard: Available and responding\")",
      "Bash(__NEW_LINE__ echo \"üì± DASHBOARD IS NOW READY!\")",
      "Bash(__NEW_LINE__ echo \"üåê Access URL: http://localhost:3000/web-dashboard.html\")",
      "Bash(__NEW_LINE__ echo \"üìä API Endpoint: http://localhost:3000/api/pod-data\")",
      "Bash(__NEW_LINE__ echo \"üìÅ New Namespace Structure (SPIFFE Best Practices):\")",
      "Bash(__NEW_LINE__ echo \"   ‚Ä¢ spire-server: SPIRE Server & PostgreSQL\")",
      "Bash(__NEW_LINE__ echo \"   ‚Ä¢ spire-system: SPIRE Agents\")",
      "Bash(__NEW_LINE__ echo \"   ‚Ä¢ production: Enterprise workload services\")",
      "Bash(__NEW_LINE__ echo \"‚ö†Ô∏è  Note: Some pods may still be starting due to Pod Security\")",
      "Bash(__NEW_LINE__ echo \"    Standards. The dashboard will show real-time status.\")",
      "Bash(__NEW_LINE__ echo \"SPIRE Server namespace:\")",
      "Bash(__NEW_LINE__ kubectl --context spire-server-cluster -n spire-server get pods -o wide)",
      "Bash(__NEW_LINE__ echo \"SPIRE System namespace:\")",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n spire-system get pods -o wide)",
      "Bash(__NEW_LINE__ echo \"Production namespace:\")",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n production get pods -o wide)",
      "Bash(__NEW_LINE__ echo \"SPIRE Server deployments:\")",
      "Bash(__NEW_LINE__ kubectl --context spire-server-cluster -n spire-server get deployments,statefulsets,replicasets -o wide)",
      "Bash(__NEW_LINE__ echo \"Recent events in spire-server namespace:\")",
      "Bash(__NEW_LINE__ kubectl --context spire-server-cluster -n spire-server get events --sort-by='.metadata.creationTimestamp')",
      "Bash(__NEW_LINE__ echo \"This will allow you to see the dashboard working with real data.\")",
      "Bash(__NEW_LINE__ kubectl --context spire-server-cluster label namespace spire-server pod-security.kubernetes.io/enforce=privileged --overwrite)",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster label namespace spire-system pod-security.kubernetes.io/enforce=privileged --overwrite)",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster label namespace production pod-security.kubernetes.io/enforce=privileged --overwrite)",
      "Bash(__NEW_LINE__ echo \"‚úÖ Pod Security Standards relaxed. Pods should start now...\")",
      "Bash(__NEW_LINE__ echo \"Waiting 30 seconds for pods to start...\")",
      "Bash(__NEW_LINE__ echo \"üìä Checking if pods are now starting...\")",
      "Bash(__NEW_LINE__ kubectl --context spire-server-cluster -n spire-server rollout restart deployment/spire-db)",
      "Bash(__NEW_LINE__ kubectl --context spire-server-cluster -n spire-server rollout restart statefulset/spire-server)",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n spire-system rollout restart daemonset/spire-agent)",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n production rollout restart deployment/user-service)",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n production rollout restart deployment/payment-api)",
      "Bash(__NEW_LINE__ kubectl --context workload-cluster -n production rollout restart deployment/inventory-service)",
      "Bash(__NEW_LINE__ echo \"‚è≥ Waiting 20 seconds for pods to start...\")",
      "Bash(__NEW_LINE__ sleep 20)",
      "Bash(__NEW_LINE__ echo \"üìä Checking pod status now...\")"
    ],
    "deny": []
  }
}