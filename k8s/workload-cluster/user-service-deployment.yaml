apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: workload
  labels:
    app: user-service
    service: user-management
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        service: user-management
        tier: backend
    spec:
      serviceAccountName: user-service
      containers:
      - name: user-service
        image: nginx:1.21
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        env:
        - name: SPIFFE_ENDPOINT_SOCKET
          value: "unix:///run/spire/sockets/agent.sock"
        - name: SERVICE_NAME
          value: "user-service"
        - name: SERVICE_PORT
          value: "8080"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: workload
  labels:
    app: user-service
    service: user-management
spec:
  selector:
    app: user-service
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-service
  namespace: workload
  labels:
    app: user-service
    service: user-management