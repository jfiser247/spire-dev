apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-registration-entries
  namespace: spire-server
data:
  entries.sh: |
    #!/bin/bash
    set -e

    # Wait for the SPIRE server to be ready
    sleep 10

    # Register the SPIRE agent (follows best practices for spire-system namespace)
    /opt/spire/bin/spire-server entry create \
      -spiffeID spiffe://example.org/agent/k8s_psat/cluster/spire-agent \
      -selector k8s_psat:cluster:cluster \
      -selector k8s_psat:agent_ns:spire-system \
      -selector k8s_psat:agent_sa:spire-agent \
      -node

    # Register user management service (follows Istio SPIFFE ID pattern)
    /opt/spire/bin/spire-server entry create \
      -spiffeID spiffe://example.org/ns/spire-workload/sa/user-service \
      -parentID spiffe://example.org/agent/k8s_psat/cluster/spire-agent \
      -selector k8s:ns:spire-workload \
      -selector k8s:sa:user-service \
      -selector k8s:pod-label:app:user-service

    # Register payment processing API (follows Istio SPIFFE ID pattern)
    /opt/spire/bin/spire-server entry create \
      -spiffeID spiffe://example.org/ns/spire-workload/sa/payment-api \
      -parentID spiffe://example.org/agent/k8s_psat/cluster/spire-agent \
      -selector k8s:ns:spire-workload \
      -selector k8s:sa:payment-api \
      -selector k8s:pod-label:app:payment-api

    # Register inventory management service (follows Istio SPIFFE ID pattern)
    /opt/spire/bin/spire-server entry create \
      -spiffeID spiffe://example.org/ns/spire-workload/sa/inventory-service \
      -parentID spiffe://example.org/agent/k8s_psat/cluster/spire-agent \
      -selector k8s:ns:spire-workload \
      -selector k8s:sa:inventory-service \
      -selector k8s:pod-label:app:inventory-service

    # List all entries
    /opt/spire/bin/spire-server entry show
---
apiVersion: batch/v1
kind: Job
metadata:
  name: spire-registration
  namespace: spire-server
spec:
  template:
    spec:
      serviceAccountName: spire-server
      containers:
      - name: spire-registration
        image: ghcr.io/spiffe/spire-server:1.6.3
        command: ["/opt/spire/bin/spire-server"]
        args: ["entry", "create", "-spiffeID", "spiffe://example.org/agent/k8s_psat/cluster/spire-agent", "-selector", "k8s_psat:cluster:cluster", "-selector", "k8s_psat:agent_ns:spire-system", "-selector", "k8s_psat:agent_sa:spire-agent", "-node"]
        volumeMounts:
        - name: spire-registration-entries
          mountPath: /config
      volumes:
      - name: spire-registration-entries
        configMap:
          name: spire-registration-entries
          defaultMode: 0755
      restartPolicy: Never
  backoffLimit: 4