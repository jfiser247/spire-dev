apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprise-api
  namespace: downstream-workloads
  labels:
    app: enterprise-api
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: enterprise-api
  template:
    metadata:
      labels:
        app: enterprise-api
        tier: backend
    spec:
      serviceAccountName: spire-downstream-agent
      containers:
      - name: enterprise-api
        image: httpd:2.4
        ports:
        - containerPort: 80
        env:
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: SERVICE_NAME
          value: enterprise-api
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: enterprise-api
  namespace: downstream-workloads
  labels:
    app: enterprise-api
spec:
  selector:
    app: enterprise-api
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-processor
  namespace: downstream-workloads
  labels:
    app: data-processor
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-processor
  template:
    metadata:
      labels:
        app: data-processor
        tier: backend
    spec:
      serviceAccountName: spire-downstream-agent
      containers:
      - name: data-processor
        image: nginx:1.21
        ports:
        - containerPort: 80
        env:
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: SERVICE_NAME
          value: data-processor
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: data-processor
  namespace: downstream-workloads
  labels:
    app: data-processor
spec:
  selector:
    app: data-processor
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: security-gateway
  namespace: downstream-workloads
  labels:
    app: security-gateway
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: security-gateway
  template:
    metadata:
      labels:
        app: security-gateway
        tier: frontend
    spec:
      serviceAccountName: spire-downstream-agent
      containers:
      - name: security-gateway
        image: envoyproxy/envoy:v1.25-latest
        ports:
        - containerPort: 8080
        - containerPort: 9901
        env:
        - name: SPIFFE_ENDPOINT_SOCKET
          value: unix:///run/spire/sockets/agent.sock
        - name: SERVICE_NAME
          value: security-gateway
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: security-gateway
  namespace: downstream-workloads
  labels:
    app: security-gateway
spec:
  type: NodePort
  selector:
    app: security-gateway
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
  - name: admin
    port: 9901
    targetPort: 9901
    nodePort: 30901
    protocol: TCP